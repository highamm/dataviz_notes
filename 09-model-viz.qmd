---
title: "Model Visualization"
author: "Matt Higham"
format: 
  html:
    embed-resources: true
---

```{r}
library(openintro)
library(tidyverse)
theme_set(theme_minimal())
evals <- openintro::evals
evals
```

## Section 9.2

```{r}
library(broom)
mod_comp <- lm(score ~ age + bty_avg + age:bty_avg + gender,
               data = evals)
mod_comp |> tidy()

library(modelr)
grid <- evals |>
  data_grid(
    age = seq_range(age, n = 6, trim = 0.1),
    bty_avg = seq_range(bty_avg, n = 6),
    gender = c("female", "male")
  ) 
grid

aug_int <- augment(mod_comp, newdata = grid,
                   interval = "confidence")
aug_int

ggplot(data = aug_int, aes(x = age, y = .fitted)) +
  geom_point(data = evals, aes(y = score), alpha = 0.6) +
  geom_line(aes(colour = as.factor(bty_avg)),
            linewidth = 2) +
  ##geom_ribbon(aes(ymin = .lower, ymax = .upper,
  ##                fill = as.factor(bty_avg)),
   ##           alpha = 0.3) +
  facet_wrap(~ gender) +
  scale_colour_viridis_d() +
  scale_fill_viridis_d() +
  theme_minimal() +
  labs(colour = "Beauty Average",
       y = "Predicted Score")
```

## Your Turn

Exercise 1.

```{r}
mod_agegend <- lm(score ~ age + gender + age:gender + ethnicity,
               data = evals)
mod_agegend |> tidy()

grid_agegend <- evals |>
  data_grid(
    age = seq_range(age, n = 10),
    ethnicity = evals |> pull(ethnicity) |> levels(),
    gender = c("female", "male")
  ) 
grid_agegend

aug_agegend <- augment(mod_agegend, newdata = grid_agegend,
                   interval = "confidence")
aug_agegend

ggplot(data = aug_agegend, aes(x = age, y = .fitted)) +
  geom_point(data = evals, aes(y = score), alpha = 0.4) +
  geom_line(aes(colour = gender), linewidth = 2) +
  scale_colour_viridis_d() +
  facet_wrap(~ ethnicity)
```

Exercise 2.

```{r}
mod_noint <- lm(score ~ age + gender + ethnicity,
               data = evals)
mod_noint |> tidy()

aug_noint <- augment(mod_noint, newdata = grid_agegend,
                   interval = "confidence")
aug_noint

full_agegend <- bind_rows(lst(aug_agegend, aug_noint),
                          .id = "model")
ggplot(data = full_agegend, aes(x = age, y = .fitted)) +
  geom_point(data = evals, aes(y = score), alpha = 0.4) +
  geom_line(aes(colour = model), linewidth = 2) +
  scale_colour_viridis_d() +
  facet_grid(gender ~ ethnicity)
```

Exercise 3.

There is no "perfect" solution to this. But, one idea is to "plug in" the median values of x_1, x_2, x_3, x_5, x_6, ... x_10 and create a grid with different values of x_4.

