---
title: "Section 7: Expressing Variability"
format: html
---

## Section 7.2

```{r}
library(tidyverse)
library(here)
statsurvey_df <- read_csv(here("data/stat113_survey.csv"))
statsurvey_df <- statsurvey_df |>
  mutate(time_year = as.numeric(time_year)) |>
  mutate(academic_year = if_else(time_semester == "S",
                                 true = time_year - 1,
                                 false = time_year)) |>
  relocate(academic_year)
statsurvey_nomiss <- statsurvey_df |>
  filter(GPA <= 4) |>
  filter(!is.na(GPA))

stat_sum <- statsurvey_nomiss |>
  group_by(academic_year) |>
  summarise(mean_gpa = mean(GPA),
            sd_gpa = sd(GPA),
            n_students = n()) |>
  mutate(se = sd_gpa / sqrt(n_students),
         lb_se = mean_gpa - se,
         ub_se = mean_gpa + se) |>
  mutate(academic_year = academic_year + 2000)

ggplot(data = stat_sum, aes(x = academic_year,
                            y = mean_gpa)) +
  geom_errorbar(aes(ymin = lb_se,
                    ymax = ub_se),
                colour = "#E42B1C") +
  geom_point() +
  theme_minimal()

```

## Your Turn

```{r}
statsurvey_df |> group_by(academic_year) |>
  summarise(mean(!is.na(Tattoo)))

survey_tattoo <- statsurvey_df |>
  filter(!is.na(Tattoo))
tattoo_plot <- survey_tattoo |> group_by(academic_year, Tattoo) |>
  summarise(n_students = n()) |>
  ungroup() |>
  pivot_wider(names_from = Tattoo, values_from = n_students) |>
  mutate(n = No + Yes) |>
  mutate(samp_prop = Yes / n,
         se = sqrt(samp_prop * (1 - samp_prop) / n),
         lb = samp_prop - se,
         ub = samp_prop + se)
ggplot(data = tattoo_plot, aes(x = academic_year,
                               y = samp_prop)) +
  geom_errorbar(aes(ymin = lb, ymax = ub)) +
  geom_point() +
  theme_minimal()
```


Fitting a Model with GPA 

```{r}
library(here)
library(tidyverse)
library(broom)

statsurvey_df <- read_csv(here("data/stat113_survey.csv"))

statsurvey_nomiss <- statsurvey_df |> filter(!is.na(GPA))
statsurvey_nomiss <- statsurvey_nomiss |>
  mutate(time_year = as.numeric(time_year)) |>
  mutate(a_year = if_else(time_semester == "S",
                          true = time_year - 1,
                          false = time_year)) |>
  filter(GPA <= 4.0) |>
  mutate(a_year_fact = as.factor(a_year),
         a_year = a_year + 2000)

year_linear <- lm(GPA ~ a_year, data = statsurvey_nomiss)
year_linear |> tidy()

year_fact <- lm(GPA ~ a_year_fact, data = statsurvey_nomiss)
year_fact |> tidy()

year_linear |> glance() |> print(width = Inf)
year_fact |> glance() |> print(width = Inf)
```

Steps 2 and 3 on handout"

```{r}
## create "grid"
grid <- tibble::tibble(a_year = 2005:2021)
grid
aug_linear <- augment(year_linear, newdata = grid,
        interval = "confidence")
ggplot(data = aug_linear, aes(x = a_year,
                              y = .fitted)) +
  geom_point(colour = "darkred") +
  geom_errorbar(aes(ymin = .lower, ymax = .upper),
                width = 0.25, colour = "darkred") +
  geom_line(alpha = 0.4) +
  theme_minimal() +
  labs(caption = "Error bars are 95% confidence intervals for the mean response") #+
 ##geom_jitter(data = statsurvey_nomiss, aes(y = GPA),
  ##          width = 0.2, alpha = 0.1, shape = 21)
## points look okay but there are so many that 
## the reader may get distracted from the trend in the mean
```

Check Assumptions

```{r}
year_linear
year_aug <- year_linear |> augment()
year_aug
## linearity
## check scatterplot of GPA vs. academic year
ggplot(data = year_aug, aes(x = a_year,
                            y = GPA)) +
  geom_jitter(width = 0.2, alpha = 0.2)
## normality
## histogram of the residuals
ggplot(data = year_aug, aes(x = .resid)) +
  geom_histogram(colour = "darkblue",
                 fill = "lightblue",
                 bins = 20)
## constant variance
## "residual plot" of residuals vs. fitted values
ggplot(data = year_aug, aes(x = .fitted,
                            y = .resid)) +
  geom_jitter(width = 0.2, alpha = 0.2)
## independence
## think about how data was collected
```